{"version":3,"sources":["User/AddUsers.module.css","User/PostItem.module.css","User/EditableSpan.tsx","User/UserInfo.tsx","redux/reponsReduser.tsx","User/PostItem.tsx","User/AddUsers.tsx","App.tsx","reportWebVitals.ts","redux/store.ts","index.tsx","App.module.css"],"names":["module","exports","EditableSpan","props","useState","editMode","setEditMode","value","title","setTitle","onChange","e","currentTarget","changeTitle","autoFocus","onBlur","onDoubleClick","UserInfo","userId","useParams","user","users","find","id","console","log","className","s","app","wrapper","firstLastName","change","post","employment","gender","birth","ADD_USER","REMOVE_USER","CHANGE_TASK_TITLE","initialState","PostItem","post_content","to","onClick","remove","AddUsers","React","state","setState","handleChange","evt","nameValue","target","name","heading","type","myBtn","setUsers","map","index","number","PATCH","App","useSelector","dispatch","useDispatch","useEffect","localStorage","setItem","JSON","stringify","addUsersAC","changeTitleAC","removeUsersAC","classes","navbar","navbar__links","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","filter","u","ofStatus","store","createStore","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be6947c0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"AddUsers_app__1BzGj\",\"wrapper\":\"AddUsers_wrapper__3zirZ\",\"myBtn\":\"AddUsers_myBtn__3n4wl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"PostItem_app__15iUq\",\"wrapper\":\"PostItem_wrapper__2CryB\",\"post\":\"PostItem_post__2kyKz\"};","import React, { ChangeEvent, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { initialStateType } from '../redux/reponsReduser';\r\n\r\ntype EditableSpanType ={\r\n   onChange:(value: any, user?:any)=>void\r\n   value: string\r\n}\r\n\r\nexport function EditableSpan(props:EditableSpanType) {\r\n   let [editMode, setEditMode] = useState(false);\r\n   let [title, setTitle] = useState(props.value);\r\n\r\n   const activateEditMode = () => {\r\n      setEditMode(true);\r\n      setTitle(props.value);\r\n   }\r\n   const activateViewMode = () => {\r\n      setEditMode(false);\r\n      props.onChange(title);\r\n   }\r\n   const changeTitle = (e: ChangeEvent<HTMLInputElement>) => {\r\n      setTitle(e.currentTarget.value)\r\n   }\r\n\r\n\r\n   return editMode\r\n      ? <input value={title} onChange={(e) => changeTitle(e)} autoFocus onBlur={activateViewMode} />\r\n      : <span onDoubleClick={activateEditMode}>{title ? title : \"Введите текст\"}</span>\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Route, Switch } from 'react-router';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from '../App.module.css';\r\nimport { initialStateType } from '../redux/reponsReduser';\r\nimport { EditableSpan } from './EditableSpan';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\nexport type UserInfoType = {\r\n   users: Array<initialStateType>,\r\n   change: (user: initialStateType) => void\r\n}\r\n\r\nconst UserInfo = (props: UserInfoType) => {\r\n   const { userId } = useParams<{ userId: string }>()\r\n\r\n   let user = props.users.find((user) => user.id === +userId ? { ...user } : {})\r\n\r\n   const changFerstLast = (firstLastName: string) => {\r\n      if (user) {\r\n         user = { ...user, firstLastName: firstLastName }\r\n         props.change(user)\r\n      }\r\n   }\r\n   const changePost = (post: string, user: initialStateType) => {\r\n      user = { ...user, post: post }\r\n      props.change(user)\r\n   }\r\n   const changeEmployment = (employment: string, user: initialStateType) => {\r\n      user = { ...user, employment: employment }\r\n      props.change(user)\r\n   }\r\n   const changeGender = (gender: string) => {\r\n      if (user) {\r\n         user = { ...user, gender: gender }\r\n         props.change(user)\r\n      }\r\n   }\r\n   const changeBirth = (birth: string) => {\r\n      if (user) {\r\n         user = { ...user, birth: birth }\r\n         props.change(user)\r\n      }\r\n   }\r\n   console.log('user', props.users);\r\n\r\n   return (\r\n      <>\r\n         <div className={s.app}>\r\n            {user ? <div className={s.wrapper}>\r\n               <h2>First Name:<EditableSpan value={user.firstLastName} onChange={changFerstLast} /></h2>\r\n               <h2>Post:<EditableSpan value={user.post} onChange={changePost} /></h2>\r\n               <h2>Employment:<EditableSpan value={user.employment} onChange={changeEmployment} /></h2>\r\n               <h2>Gender:<EditableSpan value={user.gender} onChange={changeGender} /></h2>\r\n               <h2>Birth:<EditableSpan value={user.birth} onChange={changeBirth} /></h2>\r\n            </div> : ''}\r\n         </div>\r\n      </>\r\n   )\r\n}\r\nexport default UserInfo;","\r\nconst ADD_USER = 'ADD_USER';\r\nconst REMOVE_USER = 'REMOVE_USER';\r\nconst CHANGE_TASK_TITLE = 'CHANGE-TASK-TITLE'; \r\n\r\n\r\nexport type initialStateType = {\r\n   id: number,\r\n   firstLastName:string,\r\n   post: string,\r\n   employment:string\r\n   gender: string\r\n   birth: string\r\n}\r\n\r\nconst initialState: Array<initialStateType> = [\r\n   { id: 1, firstLastName: \"JavaScript\", post: \"Description\", employment: \"POST\", gender: '', birth: ''  },\r\n   { id: 2, firstLastName: \"Java\", post: \"Position\", employment: \"NewPost\",  gender: '', birth: '' },\r\n]\r\n\r\nexport const removeUsersAC = (id: number) => ({ type: \"REMOVE_USER\", id } as const)\r\nexport const changeTitleAC = (user: initialStateType) => ({ type: 'CHANGE-TASK-TITLE', user} as const)\r\nexport const addUsersAC = (user: initialStateType) => ({ type: 'ADD_USER', user } as const)\r\n\r\nexport type addUsersACType = ReturnType<typeof addUsersAC>\r\nexport type ChangeTitleType = ReturnType<typeof changeTitleAC>\r\nexport type removeUsersType = ReturnType<typeof removeUsersAC>\r\n\r\n\r\nexport const reponsReduser = (state: Array<initialStateType> = initialState, action:ReducerActionType): Array<initialStateType> => {\r\n   switch (action.type) {\r\n      case ADD_USER: {\r\n         return [...state, action.user];\r\n      }\r\n      case REMOVE_USER: {\r\n         return state.filter(u => u.id !== action.id)\r\n      }\r\n      case CHANGE_TASK_TITLE: {\r\n         let ofStatus = state.find(u => u.id === action.user.id);\r\n         if (ofStatus) {\r\n            ofStatus.firstLastName = action.user.firstLastName;\r\n            ofStatus.post = action.user.post;\r\n            ofStatus.employment = action.user.employment;\r\n            ofStatus.gender = action.user.gender;\r\n            ofStatus.birth = action.user.birth;\r\n         }\r\n         return ([...state]);\r\n\r\n      }\r\n      default: {\r\n         return state;\r\n      }\r\n   }\r\n}\r\n\r\n\r\n\r\nexport type ReducerActionType = addUsersACType | ChangeTitleType | removeUsersType;","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from './PostItem.module.css'\r\nimport { initialStateType } from \"../redux/reponsReduser\";\r\n\r\ntype postitemType = {\r\n   remove: (user: initialStateType) => void\r\n   key: number,\r\n   number: number,\r\n   user: initialStateType\r\n   state: { firstLastName: string, post: string, employment: string }\r\n}\r\n\r\nconst PostItem = (props: postitemType) => {\r\n\r\n   return (\r\n      <div>\r\n         <div className={s.app}>\r\n            <div className={s.post}>\r\n               <div className={s.post_content}>\r\n                  <NavLink to={`/dialog/${props.user.id}`}>\r\n                     {props.user.firstLastName}\r\n                  </NavLink>\r\n                  <div>\r\n                     {props.user.employment}\r\n                  </div>\r\n               </div>\r\n               <div className='post_btns'>\r\n                  <button onClick={() => props.remove(props.user)}>\r\n                     Delete\r\n                  </button>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\nexport default PostItem;\r\n","import React, { ChangeEvent } from 'react';\r\nimport { useState } from \"react\";\r\nimport PostItem from './PostItem';\r\nimport { AppStoreType } from '../redux/store';\r\nimport { initialStateType } from '../redux/reponsReduser';\r\nimport s from './AddUsers.module.css'\r\n\r\ntype addUserType = {\r\n   user?: initialStateType\r\n   firstLastName?: string,\r\n   post?: string,\r\n   employment?: string\r\n   setUsers: (user: initialStateType) => void\r\n   users: Array<initialStateType>\r\n   remove: (id: number) => void\r\n}\r\n\r\nexport const AddUsers: React.FC<addUserType> = (props) => {\r\n   const [state, setState] = React.useState({\r\n      firstLastName: \"\",\r\n      post: \"\",\r\n      employment: \"\",\r\n      gender: \"\",\r\n      birth: ''\r\n   });\r\n\r\n   const handleChange = (evt: ChangeEvent<HTMLInputElement>) => {\r\n      const nameValue = evt.target.value\r\n      setState({\r\n         ...state,\r\n         [evt.target.name]: nameValue,\r\n      });\r\n      console.log(evt.target.name);\r\n      \r\n   }\r\n   const addPost = () => {\r\n      const user = {\r\n         ...state,\r\n      };\r\n      props.setUsers({ id: 3, ...user });\r\n\r\n      setState({ ...state, firstLastName: '', employment: '', post: '' })\r\n   }\r\n   const remove = (user: initialStateType) => {\r\n   }\r\n   return (\r\n      <div className={s.app} >\r\n         <div className={s.wrapper}>\r\n            <label>\r\n               <div className={s.heading}> First Name </div>\r\n               < input\r\n                  type=\"text\"\r\n                  name=\"firstLastName\"\r\n                  value={state.firstLastName}\r\n                  onChange={evt => handleChange(evt)}\r\n               />\r\n            </label>\r\n            < label >\r\n               <div className={s.heading}> Post </div>\r\n               < input\r\n                  type=\"text\"\r\n                  name=\"post\"\r\n                  value={state.post}\r\n                  onChange={evt => handleChange(evt)}\r\n               />\r\n            </label>\r\n            < label >\r\n               <div className={s.heading}> Employment </div>\r\n               < input\r\n                  type=\"text\"\r\n                  name=\"employment\"\r\n                  value={state.employment}\r\n                  onChange={evt => handleChange(evt)}               />\r\n            </label>\r\n\r\n            < div >\r\n               <button className={s.myBtn} onClick={addPost}>button</button>\r\n            </div>\r\n            {\r\n               props.users.map((user, index) =>\r\n                  <PostItem remove={remove} number={index + 1} user={user} key={user.id} state={state} />)\r\n            }\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\nexport default AddUsers;\r\n","import React, { useEffect, useState } from 'react';\nimport './App.module.css'\nimport { Route, Switch } from 'react-router-dom';\nimport classes from './App.module.css'\nimport UserInfo from './User/UserInfo';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { addUsersAC, changeTitleAC, initialStateType, removeUsersAC } from './redux/reponsReduser';\nimport { AppStoreType } from './redux/store';\nimport AddUsers from './User/AddUsers';\n\nexport const PATCH = {\nUSER_INFO:'/dialog/:userId',\n}\n\nexport default function App() {\n\n    const users = useSelector<AppStoreType, Array<initialStateType> >((state) => state.users);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        localStorage.setItem(\"users\", JSON.stringify(users))\n    }, [users])\n\n\n    const setUsers = (user: initialStateType) => {\n        dispatch(addUsersAC(user))\n    }\n    const change = (user: initialStateType) => {\n        dispatch(changeTitleAC(user))\n    }\n    const remove = (id: number) => {\n        dispatch(removeUsersAC(id))\n    }\n\n\n    return (\n        <div>\n            <div className={classes.navbar}>\n                <div className={classes.navbar__links}>\n                </div>\n            </div>\n\n            <Switch>\n                <Route exact path={'/'} render={() => <AddUsers users={users} setUsers={setUsers} remove={remove}\n                />} />\n                <Route path={PATCH.USER_INFO} render={() =>  <UserInfo users={users} change={change} />} />\n                {/* <Route path=\"/dialog/:userId\" render={() => <UserInfo users={users} change={change} />} /> */}\n\n            </Switch>\n\n        </div>\n    )\n}\n\n\n\n\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers } from 'redux';\r\nimport { reponsReduser } from './reponsReduser';\r\n// объединяя reducer-ы с помощью combineReducers,\r\n// мы задаём структуру нашего единственного объекта-состояния\r\nconst reducers = combineReducers({\r\n   users:reponsReduser\r\n})\r\n\r\n// непосредственно создаём store\r\nconst store = createStore(reducers)\r\n// определить автоматически тип всего объекта состояния\r\n// export type AppRootStateType = ReturnType<typeof rootReducer>\r\nexport type AppStoreType = ReturnType<typeof reducers>\r\nexport default store\r\n// а это, чтобы можно было в консоли браузера обращаться к store в любой момент\r\n// @ts-ignore\r\nwindow.store = store;\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <HashRouter>\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__5sclM\",\"wrapper\":\"App_wrapper__3cMce\",\"heading\":\"App_heading__15np7\",\"post\":\"App_post__1_bmW\",\"navbar\":\"App_navbar__LNYkv\",\"navbar__links\":\"App_navbar__links__N8rTL\",\"NavLink\":\"App_NavLink__3lyeE\",\"div\":\"App_div__1vfxS\",\"img\":\"App_img__1seVf\"};"],"sourceRoot":""}